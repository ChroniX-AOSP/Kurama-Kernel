name: CI Build

on:
  workflow_dispatch:
    inputs:
      Build_KSU:
        required: true
        type: boolean
      Build_NonKSU:
        required: true
        type: boolean
      Build_Manager:
        required: true
        type: boolean
      Kernel_Git:
        required: true
        type: string
        default: https://github.com/SchweGELBin/kernel_milk_davinci.git
      Kernel_Branch:
        required: true
        type: string
        default: pixelos-14.0
      os:
        required: false
        type: string
        default: ubuntu-latest

jobs:
  env:
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Environment
        id: environment
        run: |
          cd $GITHUB_WORKSPACE
          sudo bash env.sh

  build-manager:
    if: ${{ inputs.Build_Manager }}
    uses: ./.github/workflows/build-manager.yml
    
  build-ksu:
    if: ${{ inputs.Build_KSU }}
    needs: env
    uses: ./.github/workflows/build-kernel.yml
    with:
      include_ksu: "KSU"
      kernel_git: ${{ inputs.Kernel_Git }}
      kernel_branch: ${{ inputs.Kernel_Branch }}

  build-nonksu:
    if: ${{ inputs.Build_NonKSU }}
    needs: env
    uses: ./.github/workflows/build-kernel.yml
    with:
      include_ksu: "NonKSU"
      kernel_git: ${{ inputs.Kernel_Git }}
      kernel_branch: ${{ inputs.Kernel_Branch }}
      
  build:
    needs: [env, build-manager, build-ksu, build-nonksu]
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Tag
        id: tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | grep "tag_name" | cut -d '"' -f 4)
          if [[ -z "$latest_tag" ]]; then latest_tag='v0'; fi
          echo "Latest Tag: $latest_tag"
          echo "tag=v$((${latest_tag:1} + 1))" >> $GITHUB_ENV
          
      - name: Download artifacts
        id: artifacts
        uses: actions/download-artifact@v4
        with:
          path: $GITHUB_WORKSPACE/out/artifacts/.
          
      - name: Prepare Release
        id: prepare
        run: |
          cd $GITHUB_WORKSPACE
          if [[ -f out/artifacts/*-KSU-bodyFile.md ]]; then
            cp out/artifacts/*-KSU-bodyFile.md out/bodyFile.md
          else
            cp out/artifacts/*-bodyFile.md out/bodyFile.md
          fi
          if [[ -f out/artifacts/*-KSU-name.txt ]]; then
            echo "name=$(cat out/artifacts/*-KSU-name.txt)" >> $GITHUB_ENV
          else
            echo "name=$(cat out/artifacts/*-name.txt)" >> $GITHUB_ENV
          fi
          rm out/artifacts/*-bodyFile.md
          rm out/artifacts/*-name.txt
          rm out/artifacts/ksud*
          
      - name: Release
        id: release
        uses: ncipollo/release-action@v1
        with:
          name: "${{ env.name }}"
          tag: "${{ env.tag }}"
          allowUpdates: false
          bodyFile: "${{ github.workspace }}/out/bodyFile.md"
          artifacts: "${{ github.workspace }}/out/artifacts/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Cleanup
        id: cleanup
        run: rm -r $GITHUB_WORKSPACE/out/*
